[{"/Users/charchill/Work/Projects/catchphrase-word-game/src/index.js":"1","/Users/charchill/Work/Projects/catchphrase-word-game/src/serviceWorkerRegistration.js":"2","/Users/charchill/Work/Projects/catchphrase-word-game/src/reportWebVitals.js":"3","/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/main/main.js":"4","/Users/charchill/Work/Projects/catchphrase-word-game/src/components/router/index.js":"5","/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/pre-game/pregame.js":"6","/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/in-game/ingame.js":"7"},{"size":900,"mtime":1609087160929,"results":"8","hashOfConfig":"9"},{"size":5064,"mtime":1609006557317,"results":"10","hashOfConfig":"9"},{"size":364,"mtime":1609006557316,"results":"11","hashOfConfig":"9"},{"size":1866,"mtime":1609099137743,"results":"12","hashOfConfig":"9"},{"size":588,"mtime":1609154204580,"results":"13","hashOfConfig":"9"},{"size":1563,"mtime":1609243226279,"results":"14","hashOfConfig":"9"},{"size":1934,"mtime":1609248774770,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7yfzp7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/charchill/Work/Projects/catchphrase-word-game/src/index.js",[],["33","34"],"/Users/charchill/Work/Projects/catchphrase-word-game/src/serviceWorkerRegistration.js",[],["35","36"],"/Users/charchill/Work/Projects/catchphrase-word-game/src/reportWebVitals.js",[],"/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/main/main.js",[],"/Users/charchill/Work/Projects/catchphrase-word-game/src/components/router/index.js",[],"/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/pre-game/pregame.js",["37"],"/Users/charchill/Work/Projects/catchphrase-word-game/src/pages/in-game/ingame.js",["38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport '../in-game/ingame.css';\nimport { Button, Container, Row, Alert, Card, ButtonGroup } from 'react-bootstrap';\nimport {useLocation, Link} from 'react-router-dom';\n\nconst year = new Date();\n\nfunction Ingame() {\n  const { state } = useLocation();\n  const [min, setMin] = useState(state);\n  const [millisec, setMillisec] = useState((min*60)*1000);\n  const [seconds, setSeconds] = useState(0);\n  const [secToMilli, setSecToMilli] = useState(0);\n  console.log(\"secons\" + secToMilli + \" millisec\" + millisec);\n  useEffect(() => {\n    if ((seconds*1000) <= millisec) {\n      \n      const interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n        setMillisec(secToMilli => seconds*1000);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else{\n      setSeconds(\"Times Up\")\n    }\n    }, []);\n \n\n\n\n  return (\n    <Container className=\"App\" fluid>\n        <Row>\n        <Alert className=\"App-Header\" variant=\"light\">\n          <h1>CatchPhrase</h1>\n          <small>- Word/Party Game</small>\n        </Alert>\n        </Row>\n        <Row>\n        <Alert className=\"App-Header\" variant=\"dark\">\n          <h3>{seconds}</h3>\n          <small>Timer</small>\n        </Alert>\n        </Row>\n        <Row>\n        <Card>\n          <Card.Body className=\"App-Game-Rules\">\n           Word\n          </Card.Body>\n          <Card.Footer>\n            <ButtonGroup aria-label=\"Basic example\">\n              <Button variant=\"warning\" className=\"btnPadding\">Next</Button>\n              <Link to=\"/pregame\"><Button variant=\"danger\" className=\"btnPadding\">Reset</Button></Link>\n            </ButtonGroup>   \n          </Card.Footer>\n        </Card>\n        </Row>\n        <Row>\n        &copy; {year.getFullYear()}<a href=\"https://motasimfoad.com\" target=\"_blank\" rel=\"noreferrer\">&nbsp; Motasim Foad</a>\n        </Row>\n    </Container>\n  );\n}\n\nexport default Ingame;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":10,"column":15,"nodeType":"49","messageId":"50","endLine":10,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":13,"column":22,"nodeType":"49","messageId":"50","endLine":13,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":26,"column":8,"nodeType":"55","endLine":26,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"no-unused-vars","'Ingame' is defined but never used.","Identifier","unusedVar","'setMin' is assigned a value but never used.","'setSecToMilli' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'millisec' and 'seconds'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMillisec' needs the current value of 'seconds'.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [millisec, seconds]",{"range":"62","text":"63"},[876,878],"[millisec, seconds]"]